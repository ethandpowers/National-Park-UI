{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ethan.powers/Pet Projects/NatParkUI2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\n\nfunction SpeciesResultsComponent_tr_31_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cName_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r2.generateWikiLink(cName_r3.name), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cName_r3.name);\n  }\n}\n\nfunction SpeciesResultsComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtemplate(2, SpeciesResultsComponent_tr_31_p_2_Template, 3, 2, \"p\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"a\", 4);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", item_r1.commonNames);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.scientificName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.speciesID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r0.generateWikiLink(item_r1.park), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.park);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.abundance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.order);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.family);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.conservationStatus);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.nativeness);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.occurance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.seasonality);\n  }\n}\n\nexport class SpeciesResultsComponent {\n  constructor(_router, activatedRoute, http) {\n    this._router = _router;\n    this.activatedRoute = activatedRoute;\n    this.data = history.state.data;\n    this.http = http;\n\n    if (this.data == undefined) {\n      this._router.navigate(['404']);\n\n      return;\n    }\n\n    console.log(this.data);\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParamMap.subscribe(paramMap => {\n      const refresh = paramMap.get('refresh');\n\n      if (refresh) {\n        this.data = history.state.data;\n      }\n    });\n  }\n\n  generateWikiLink(str) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      str = str.replace(\" \", \"%20\");\n      let str2 = str.replace(\" \", \"_\");\n      let url = `https://en.wikipedia.org/wiki/${str2}`;\n\n      let response = _this.http.get(`http://localhost:6600/api/`, {\n        observe: 'response'\n      }).subscribe(data => {\n        console.log(response);\n        response.unsubscribe();\n      });\n\n      return url;\n    })();\n  }\n\n}\n\nSpeciesResultsComponent.ɵfac = function SpeciesResultsComponent_Factory(t) {\n  return new (t || SpeciesResultsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nSpeciesResultsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SpeciesResultsComponent,\n  selectors: [[\"app-species-results\"]],\n  decls: 32,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"table\", \"text-center\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 3, \"href\"]],\n  template: function SpeciesResultsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"Results\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1);\n      i0.ɵɵelementStart(4, \"thead\");\n      i0.ɵɵelementStart(5, \"tr\");\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Common Names\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Scientific Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2);\n      i0.ɵɵtext(11, \"SpeciesID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 2);\n      i0.ɵɵtext(13, \"Park\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 2);\n      i0.ɵɵtext(15, \"Abundance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 2);\n      i0.ɵɵtext(17, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 2);\n      i0.ɵɵtext(19, \"Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 2);\n      i0.ɵɵtext(21, \"Family\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 2);\n      i0.ɵɵtext(23, \"Conservation Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\", 2);\n      i0.ɵɵtext(25, \"Nativeness\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 2);\n      i0.ɵɵtext(27, \"Occurrence\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\", 2);\n      i0.ɵɵtext(29, \"Seasonality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"tbody\");\n      i0.ɵɵtemplate(31, SpeciesResultsComponent_tr_31_Template, 26, 13, \"tr\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  directives: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcGVjaWVzLXJlc3VsdHMuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\ethan.powers\\Pet Projects\\NatParkUI2\\src\\app\\Components\\species-results\\species-results.component.ts","C:\\Users\\ethan.powers\\Pet Projects\\NatParkUI2\\src\\app\\Components\\species-results\\species-results.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Route } from '@angular/compiler/src/core';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap, RouterEvent } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-species-results',\n  templateUrl: './species-results.component.html',\n  styleUrls: ['./species-results.component.css']\n})\nexport class SpeciesResultsComponent implements OnInit {\n  data: any[];\n  http: HttpClient;\n\n  constructor(private _router: Router, private activatedRoute: ActivatedRoute, http:HttpClient) {\n    this.data = history.state.data;\n    this.http = http;\n    if (this.data == undefined) {\n      this._router.navigate(['404']);\n      return;\n    }\n    console.log(this.data)\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParamMap.subscribe((paramMap: ParamMap) => {\n      const refresh = paramMap.get('refresh');\n      if (refresh) {\n        this.data = history.state.data;\n      }\n    });\n  };\n\n\n  async generateWikiLink(str: string) {\n    str = str.replace(\" \", \"%20\")\n    let str2 = str.replace(\" \", \"_\");\n    let url = `https://en.wikipedia.org/wiki/${str2}`;\n    let response = this.http.get<any>(`http://localhost:6600/api/`, { observe: 'response' }).subscribe(data => {\n      console.log(response);\n      response.unsubscribe();\n\n    });\n    return url;\n  }\n}\n","<div class=\"container\">\n    <h1>Results</h1>\n</div>\n<table class=\"table text-center\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Common Names</th>\n            <th scope=\"col\">Scientific Name</th>\n            <th scope=\"col\">SpeciesID</th>\n            <th scope=\"col\">Park</th>\n            <th scope=\"col\">Abundance</th>\n            <th scope=\"col\">Category</th>\n            <th scope=\"col\">Order</th>\n            <th scope=\"col\">Family</th>\n            <th scope=\"col\">Conservation Status</th>\n            <th scope=\"col\">Nativeness</th>\n            <th scope=\"col\">Occurrence</th>\n            <th scope=\"col\">Seasonality</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of data\">\n            <td>\n                <p *ngFor=\"let cName of item.commonNames\"><a href=\"{{ generateWikiLink(cName.name)}}\"\n                        target=\"_blank\">{{cName.name}}</a></p>\n            </td>\n            <td>{{ item.scientificName }}</td>\n            <td>{{ item.speciesID }}</td>\n            <td><a href=\"{{ generateWikiLink(item.park)}}\" target=\"_blank\">{{item.park}}</a></td>\n            <td>{{ item.abundance }}</td>\n            <td>{{ item.category }}</td>\n            <td>{{ item.order }}</td>\n            <td>{{ item.family }}</td>\n            <td>{{ item.conservationStatus }}</td>\n            <td>{{ item.nativeness }}</td>\n            <td>{{ item.occurance }}</td>\n            <td>{{ item.seasonality }}</td>\n        </tr>\n    </tbody>\n</table>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}