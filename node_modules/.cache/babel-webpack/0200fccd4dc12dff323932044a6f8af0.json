{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ethan.powers/Pet Projects/NatParkUI2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\n\nfunction ParkResultsComponent_tr_19_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(state_r3.name);\n  }\n}\n\nfunction ParkResultsComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"a\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, ParkResultsComponent_tr_19_p_13_Template, 2, 1, \"p\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r0.generateWikiLink(item_r1.name), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.acres);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.latitude);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.longitude);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", item_r1.states);\n  }\n}\n\nexport class ParkResultsComponent {\n  constructor(_router, activatedRoute) {\n    this._router = _router;\n    this.activatedRoute = activatedRoute;\n    this.data = history.state.data;\n\n    if (this.data == undefined) {\n      this._router.navigate(['404']);\n\n      return;\n    }\n\n    console.log(this.data);\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParamMap.subscribe(paramMap => {\n      const refresh = paramMap.get('refresh');\n\n      if (refresh) {\n        this.data = history.state.data;\n      }\n    });\n  }\n\n  generateWikiLink(str) {\n    return _asyncToGenerator(function* () {\n      let str2 = str.replace(\" \", \"_\");\n      let url = `https://en.wikipedia.org/wiki/${str2}`;\n      let response = yield fetch(url);\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n    })();\n  }\n\n}\n\nParkResultsComponent.ɵfac = function ParkResultsComponent_Factory(t) {\n  return new (t || ParkResultsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n\nParkResultsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ParkResultsComponent,\n  selectors: [[\"app-park-results\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"table\", \"text-center\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 3, \"href\"]],\n  template: function ParkResultsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"Results\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1);\n      i0.ɵɵelementStart(4, \"thead\");\n      i0.ɵɵelementStart(5, \"tr\");\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2);\n      i0.ɵɵtext(11, \"Acres\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 2);\n      i0.ɵɵtext(13, \"Latitude\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 2);\n      i0.ɵɵtext(15, \"Longitude\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 2);\n      i0.ɵɵtext(17, \"States\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, ParkResultsComponent_tr_19_Template, 14, 7, \"tr\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJrLXJlc3VsdHMuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\ethan.powers\\Pet Projects\\NatParkUI2\\src\\app\\Components\\park-results\\park-results.component.ts","C:\\Users\\ethan.powers\\Pet Projects\\NatParkUI2\\src\\app\\Components\\park-results\\park-results.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-park-results',\n  templateUrl: './park-results.component.html',\n  styleUrls: ['./park-results.component.css']\n})\nexport class ParkResultsComponent implements OnInit {\n  data: any[];\n\n  constructor(private _router: Router, private activatedRoute: ActivatedRoute) {\n    this.data = history.state.data;\n    if (this.data == undefined) {\n      this._router.navigate(['404']);\n      return;\n    }\n    console.log(this.data)\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParamMap.subscribe((paramMap: ParamMap) => {\n      const refresh = paramMap.get('refresh');\n      if (refresh) {\n        this.data = history.state.data;\n      }\n    });\n  };\n\n\n  async generateWikiLink(str: string) {\n    let str2 = str.replace(\" \", \"_\");\n    let url = `https://en.wikipedia.org/wiki/${str2}`;\n    let response = await fetch(url);\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Results</h1>\n</div>\n<table class=\"table text-center\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Code</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Acres</th>\n            <th scope=\"col\">Latitude</th>\n            <th scope=\"col\">Longitude</th>\n            <th scope=\"col\">States</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of data\">\n            <td>{{ item.code }}</td>\n           <td><a href=\"{{ generateWikiLink(item.name)}}\" target=\"_blank\">{{item.name}}</a></td>\n           <td>{{ item.acres }}</td>\n           <td>{{ item.latitude}}</td>\n           <td>{{ item.longitude }}</td>\n           <td><p *ngFor=\"let state of item.states\">{{ state.name }}</p></td>\n        </tr>\n    </tbody>\n</table>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}